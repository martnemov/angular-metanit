{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { DataService } from \"./data.service\";\nlet AppComponent = class AppComponent {\n  _dataService;\n  items = [];\n  name = \"\";\n  constructor(_dataService) {\n    this._dataService = _dataService;\n  }\n  addData(name) {\n    this._dataService.addData(name);\n  }\n  ngOnInit() {\n    this.items = this._dataService.getData();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: \"my-app\",\n  standalone: true,\n  imports: [FormsModule],\n  providers: [DataService],\n  template: `\n    <div>\n        <input [(ngModel)]=\"name\" />\n        <button (click)=\"addData(name)\">Add</button>\n        <ul>\n            @for (item of items; track ){\n                \n            }\n        </ul>\n    </div>\n    `,\n  styles: [`h1 { color: black; }`]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
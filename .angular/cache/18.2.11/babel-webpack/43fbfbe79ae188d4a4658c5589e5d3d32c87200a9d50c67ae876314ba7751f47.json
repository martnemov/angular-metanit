{"ast":null,"code":"import { input, output } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    userName = input();\n    userNameChange = output();\n    onNameChange(model) {\n      this.userNameChange.emit(model);\n    }\n    static ɵfac = function ChildComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChildComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChildComponent,\n      selectors: [[\"child-comp\"]],\n      inputs: {\n        userName: [1, \"userName\"]\n      },\n      outputs: {\n        userNameChange: \"userNameChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"ngModelChange\", \"ngModel\"]],\n      template: function ChildComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function ChildComponent_Template_input_ngModelChange_0_listener() {\n            return ctx.userNameChange;\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngModel\", ctx.userName());\n        }\n      },\n      dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n      styles: [\"h2[_ngcontent-%COMP%]{color:navy}\"]\n    });\n  }\n  return ChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
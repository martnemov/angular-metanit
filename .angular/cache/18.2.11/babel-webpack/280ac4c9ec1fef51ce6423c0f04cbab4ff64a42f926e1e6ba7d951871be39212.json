{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Directive, HostBinding, HostListener, input } from '@angular/core';\nlet BoldDirective = class BoldDirective {\n  selectedSize = input.required('18px');\n  fontWeight = \"normal\";\n  get getFontWeight() {\n    return this.fontWeight;\n  }\n  get getCursor() {\n    return \"pointer\";\n  }\n  onMouseEnter() {\n    this.fontWeight = \"bold\";\n  }\n  onMouseLeave() {\n    this.fontWeight = \"normal\";\n  }\n};\n__decorate([HostBinding(\"style.fontWeight\")], BoldDirective.prototype, \"getFontWeight\", null);\n__decorate([HostBinding(\"style.cursor\")], BoldDirective.prototype, \"getCursor\", null);\n__decorate([HostListener(\"mouseenter\")], BoldDirective.prototype, \"onMouseEnter\", null);\n__decorate([HostListener(\"mouseleave\")], BoldDirective.prototype, \"onMouseLeave\", null);\nBoldDirective = __decorate([Directive({\n  selector: '[bold]',\n  standalone: true\n})], BoldDirective);\nexport { BoldDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}